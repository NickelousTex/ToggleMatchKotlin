// Generated by view binder compiler. Do not edit!
package com.togglematch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.togglematch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMatchBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView lastMessage;

  @NonNull
  public final ImageView matchAvatar;

  @NonNull
  public final TextView matchName;

  @NonNull
  public final View onlineIndicator;

  @NonNull
  public final TextView timestamp;

  private ItemMatchBinding(@NonNull CardView rootView, @NonNull TextView lastMessage,
      @NonNull ImageView matchAvatar, @NonNull TextView matchName, @NonNull View onlineIndicator,
      @NonNull TextView timestamp) {
    this.rootView = rootView;
    this.lastMessage = lastMessage;
    this.matchAvatar = matchAvatar;
    this.matchName = matchName;
    this.onlineIndicator = onlineIndicator;
    this.timestamp = timestamp;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMatchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMatchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_match, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMatchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.last_message;
      TextView lastMessage = ViewBindings.findChildViewById(rootView, id);
      if (lastMessage == null) {
        break missingId;
      }

      id = R.id.match_avatar;
      ImageView matchAvatar = ViewBindings.findChildViewById(rootView, id);
      if (matchAvatar == null) {
        break missingId;
      }

      id = R.id.match_name;
      TextView matchName = ViewBindings.findChildViewById(rootView, id);
      if (matchName == null) {
        break missingId;
      }

      id = R.id.online_indicator;
      View onlineIndicator = ViewBindings.findChildViewById(rootView, id);
      if (onlineIndicator == null) {
        break missingId;
      }

      id = R.id.timestamp;
      TextView timestamp = ViewBindings.findChildViewById(rootView, id);
      if (timestamp == null) {
        break missingId;
      }

      return new ItemMatchBinding((CardView) rootView, lastMessage, matchAvatar, matchName,
          onlineIndicator, timestamp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

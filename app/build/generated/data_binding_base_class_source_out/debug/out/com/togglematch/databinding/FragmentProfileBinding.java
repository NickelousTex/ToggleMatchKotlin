// Generated by view binder compiler. Do not edit!
package com.togglematch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.togglematch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton editProfileButton;

  @NonNull
  public final LinearLayout interestsContainer;

  @NonNull
  public final Switch locationSwitch;

  @NonNull
  public final Switch notificationsSwitch;

  @NonNull
  public final View onlineIndicator;

  @NonNull
  public final MaterialButton privacyButton;

  @NonNull
  public final ImageView profileAvatar;

  @NonNull
  public final TextView profileBio;

  @NonNull
  public final LinearLayout profileHeader;

  @NonNull
  public final TextView profileLocation;

  @NonNull
  public final TextView profileName;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final ImageView verifiedBadge;

  private FragmentProfileBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton editProfileButton, @NonNull LinearLayout interestsContainer,
      @NonNull Switch locationSwitch, @NonNull Switch notificationsSwitch,
      @NonNull View onlineIndicator, @NonNull MaterialButton privacyButton,
      @NonNull ImageView profileAvatar, @NonNull TextView profileBio,
      @NonNull LinearLayout profileHeader, @NonNull TextView profileLocation,
      @NonNull TextView profileName, @NonNull TextView statusText,
      @NonNull ImageView verifiedBadge) {
    this.rootView = rootView;
    this.editProfileButton = editProfileButton;
    this.interestsContainer = interestsContainer;
    this.locationSwitch = locationSwitch;
    this.notificationsSwitch = notificationsSwitch;
    this.onlineIndicator = onlineIndicator;
    this.privacyButton = privacyButton;
    this.profileAvatar = profileAvatar;
    this.profileBio = profileBio;
    this.profileHeader = profileHeader;
    this.profileLocation = profileLocation;
    this.profileName = profileName;
    this.statusText = statusText;
    this.verifiedBadge = verifiedBadge;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_profile_button;
      MaterialButton editProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (editProfileButton == null) {
        break missingId;
      }

      id = R.id.interests_container;
      LinearLayout interestsContainer = ViewBindings.findChildViewById(rootView, id);
      if (interestsContainer == null) {
        break missingId;
      }

      id = R.id.location_switch;
      Switch locationSwitch = ViewBindings.findChildViewById(rootView, id);
      if (locationSwitch == null) {
        break missingId;
      }

      id = R.id.notifications_switch;
      Switch notificationsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (notificationsSwitch == null) {
        break missingId;
      }

      id = R.id.online_indicator;
      View onlineIndicator = ViewBindings.findChildViewById(rootView, id);
      if (onlineIndicator == null) {
        break missingId;
      }

      id = R.id.privacy_button;
      MaterialButton privacyButton = ViewBindings.findChildViewById(rootView, id);
      if (privacyButton == null) {
        break missingId;
      }

      id = R.id.profile_avatar;
      ImageView profileAvatar = ViewBindings.findChildViewById(rootView, id);
      if (profileAvatar == null) {
        break missingId;
      }

      id = R.id.profile_bio;
      TextView profileBio = ViewBindings.findChildViewById(rootView, id);
      if (profileBio == null) {
        break missingId;
      }

      id = R.id.profile_header;
      LinearLayout profileHeader = ViewBindings.findChildViewById(rootView, id);
      if (profileHeader == null) {
        break missingId;
      }

      id = R.id.profile_location;
      TextView profileLocation = ViewBindings.findChildViewById(rootView, id);
      if (profileLocation == null) {
        break missingId;
      }

      id = R.id.profile_name;
      TextView profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      id = R.id.status_text;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.verified_badge;
      ImageView verifiedBadge = ViewBindings.findChildViewById(rootView, id);
      if (verifiedBadge == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ScrollView) rootView, editProfileButton,
          interestsContainer, locationSwitch, notificationsSwitch, onlineIndicator, privacyButton,
          profileAvatar, profileBio, profileHeader, profileLocation, profileName, statusText,
          verifiedBadge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
